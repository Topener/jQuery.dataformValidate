{"google":"","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"jQuery.dataformValidate","tagline":"Validate a form based on html5 data attributes","body":"jQuery.dataformValidate (v0.2)\r\n=======================\r\n\r\nValidate a form based on the html5 data attribute `data-validate=\"\"`.\r\n\r\n<i><b>Note</b>: It will validate hidden fields, but <b>dataformValidate().valid</b> will return true if all visible elements are valid\r\n\r\n<h3>JavaScript</h3>\r\n\r\nVery simple to execute:\r\n\r\n    $.('.myform').dataformValidate([options])\r\n    \r\nSimple use in an <b>if statement</b>:\r\n\r\n    if (true === $.('.myform').dataformValidate(options).valid){\r\n        // do stuff here.\r\n    }\r\n    \r\nOptions are optional, and set automatically when given to the validator\r\n\r\n    var options = {\r\n        debug: false, // debug mode\r\n        hightlightField: true, // do you want to highlight error input fields (ie. add the errorClass)\r\n        errorClass: 'dataform-validate-error', // provide the class used for styling error input fields\r\n        dateFormat: 'mdy', // provide in what format the date should be validated on.\r\n        ignorePlaceholders: true, // whether or not placeholders should be removed before validating\r\n        placeholderElement: 'placeholder' // this will be prepended with 'data-'. In this case data-placeholder=\"my default value\"\r\n    };\r\n    \r\n<b>dateFormat</b> should only contain \"m\", \"d\" and/or \"y\" for validation. They represent month/day/year.    \r\n<h3>HTML</h3>\r\n\r\nThe HTML required data-validate=\"\" attributes. The \"parent\" dom element should be given to the validator.\r\n\r\n    <div class=\"myform\">\r\n        Required: <input type=\"text\" data-validate=\"required\" />\r\n        Phonenumber: <input type=\"text\" data-validate=\"phonenumber\" />\r\n        E-mail address: <input type=\"text\" data-validate=\"email\" />\r\n        Minimum 4 character: <input type=\"text\" data-validate=\"minlength=4\" />\r\n        Maximum 10 character: <input type=\"text\" data-validate=\"maxlength=10\" />\r\n        Numeric: <input type=\"text\" data-validate=\"numeric\" />\r\n        Date: <input type=\"text\" data-validate=\"date\" />\r\n    </div>\r\n    \r\nOf course, any combination is valid. The seperator to be used is a whitespace. \r\n\r\nThis would also be possible:\r\n\r\n    Required: <input type=\"text\" data-validate=\"required minlength=4 maxlength=12 numeric\" />\r\n    \r\n<h3>CSS</h3>\r\n\r\nThe only CSS required, is to highlight the fields. This is a simple, but effective example:\r\n\r\n    .dataform-validate-error {\r\n        background-color: #FAD7D7 !important;\r\n          color: #858585 !important;\r\n    \tfont-weight: bold !important;\r\n    }"}